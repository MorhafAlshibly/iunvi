// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/tenantManagement.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TableFieldType int32

const (
	TableFieldType_BIGINT      TableFieldType = 0
	TableFieldType_BIT         TableFieldType = 1
	TableFieldType_BLOB        TableFieldType = 2
	TableFieldType_BOOLEAN     TableFieldType = 3
	TableFieldType_DATE        TableFieldType = 4
	TableFieldType_DOUBLE      TableFieldType = 5
	TableFieldType_FLOAT       TableFieldType = 6
	TableFieldType_HUGEINT     TableFieldType = 7
	TableFieldType_INTEGER     TableFieldType = 8
	TableFieldType_INTERVAL    TableFieldType = 9
	TableFieldType_JSON        TableFieldType = 10
	TableFieldType_SMALLINT    TableFieldType = 11
	TableFieldType_TIME        TableFieldType = 12
	TableFieldType_TIMESTAMPTZ TableFieldType = 13
	TableFieldType_TIMESTAMP   TableFieldType = 14
	TableFieldType_TINYINT     TableFieldType = 15
	TableFieldType_UBIGINT     TableFieldType = 16
	TableFieldType_UHUGEINT    TableFieldType = 17
	TableFieldType_UINTEGER    TableFieldType = 18
	TableFieldType_USMALLINT   TableFieldType = 19
	TableFieldType_UTINYINT    TableFieldType = 20
	TableFieldType_UUID        TableFieldType = 21
	TableFieldType_VARCHAR     TableFieldType = 22
)

// Enum value maps for TableFieldType.
var (
	TableFieldType_name = map[int32]string{
		0:  "BIGINT",
		1:  "BIT",
		2:  "BLOB",
		3:  "BOOLEAN",
		4:  "DATE",
		5:  "DOUBLE",
		6:  "FLOAT",
		7:  "HUGEINT",
		8:  "INTEGER",
		9:  "INTERVAL",
		10: "JSON",
		11: "SMALLINT",
		12: "TIME",
		13: "TIMESTAMPTZ",
		14: "TIMESTAMP",
		15: "TINYINT",
		16: "UBIGINT",
		17: "UHUGEINT",
		18: "UINTEGER",
		19: "USMALLINT",
		20: "UTINYINT",
		21: "UUID",
		22: "VARCHAR",
	}
	TableFieldType_value = map[string]int32{
		"BIGINT":      0,
		"BIT":         1,
		"BLOB":        2,
		"BOOLEAN":     3,
		"DATE":        4,
		"DOUBLE":      5,
		"FLOAT":       6,
		"HUGEINT":     7,
		"INTEGER":     8,
		"INTERVAL":    9,
		"JSON":        10,
		"SMALLINT":    11,
		"TIME":        12,
		"TIMESTAMPTZ": 13,
		"TIMESTAMP":   14,
		"TINYINT":     15,
		"UBIGINT":     16,
		"UHUGEINT":    17,
		"UINTEGER":    18,
		"USMALLINT":   19,
		"UTINYINT":    20,
		"UUID":        21,
		"VARCHAR":     22,
	}
)

func (x TableFieldType) Enum() *TableFieldType {
	p := new(TableFieldType)
	*p = x
	return p
}

func (x TableFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tenantManagement_proto_enumTypes[0].Descriptor()
}

func (TableFieldType) Type() protoreflect.EnumType {
	return &file_api_tenantManagement_proto_enumTypes[0]
}

func (x TableFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableFieldType.Descriptor instead.
func (TableFieldType) EnumDescriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{0}
}

type WorkspaceRole int32

const (
	WorkspaceRole_UNASSIGNED WorkspaceRole = 0
	WorkspaceRole_VIEWER     WorkspaceRole = 1
	WorkspaceRole_USER       WorkspaceRole = 2
	WorkspaceRole_DEVELOPER  WorkspaceRole = 3
)

// Enum value maps for WorkspaceRole.
var (
	WorkspaceRole_name = map[int32]string{
		0: "UNASSIGNED",
		1: "VIEWER",
		2: "USER",
		3: "DEVELOPER",
	}
	WorkspaceRole_value = map[string]int32{
		"UNASSIGNED": 0,
		"VIEWER":     1,
		"USER":       2,
		"DEVELOPER":  3,
	}
)

func (x WorkspaceRole) Enum() *WorkspaceRole {
	p := new(WorkspaceRole)
	*p = x
	return p
}

func (x WorkspaceRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tenantManagement_proto_enumTypes[1].Descriptor()
}

func (WorkspaceRole) Type() protoreflect.EnumType {
	return &file_api_tenantManagement_proto_enumTypes[1]
}

func (x WorkspaceRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceRole.Descriptor instead.
func (WorkspaceRole) EnumDescriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{1}
}

type DataMode int32

const (
	DataMode_INPUT  DataMode = 0
	DataMode_OUTPUT DataMode = 1
)

// Enum value maps for DataMode.
var (
	DataMode_name = map[int32]string{
		0: "INPUT",
		1: "OUTPUT",
	}
	DataMode_value = map[string]int32{
		"INPUT":  0,
		"OUTPUT": 1,
	}
)

func (x DataMode) Enum() *DataMode {
	p := new(DataMode)
	*p = x
	return p
}

func (x DataMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tenantManagement_proto_enumTypes[2].Descriptor()
}

func (DataMode) Type() protoreflect.EnumType {
	return &file_api_tenantManagement_proto_enumTypes[2]
}

func (x DataMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMode.Descriptor instead.
func (DataMode) EnumDescriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{2}
}

type CreateWorkspaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkspaceRequest) Reset() {
	*x = CreateWorkspaceRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceRequest) ProtoMessage() {}

func (x *CreateWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkspaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateWorkspaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkspaceResponse) Reset() {
	*x = CreateWorkspaceResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkspaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceResponse) ProtoMessage() {}

func (x *CreateWorkspaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWorkspaceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWorkspacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkspacesRequest) Reset() {
	*x = GetWorkspacesRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkspacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspacesRequest) ProtoMessage() {}

func (x *GetWorkspacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspacesRequest.ProtoReflect.Descriptor instead.
func (*GetWorkspacesRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{2}
}

type GetWorkspacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workspaces    []*Workspace           `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkspacesResponse) Reset() {
	*x = GetWorkspacesResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkspacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspacesResponse) ProtoMessage() {}

func (x *GetWorkspacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspacesResponse.ProtoReflect.Descriptor instead.
func (*GetWorkspacesResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkspacesResponse) GetWorkspaces() []*Workspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

type EditWorkspaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditWorkspaceRequest) Reset() {
	*x = EditWorkspaceRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWorkspaceRequest) ProtoMessage() {}

func (x *EditWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*EditWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{4}
}

func (x *EditWorkspaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EditWorkspaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EditWorkspaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditWorkspaceResponse) Reset() {
	*x = EditWorkspaceResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditWorkspaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWorkspaceResponse) ProtoMessage() {}

func (x *EditWorkspaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWorkspaceResponse.ProtoReflect.Descriptor instead.
func (*EditWorkspaceResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{5}
}

type GetUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{6}
}

type GetUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{7}
}

func (x *GetUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetUserWorkspaceAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserObjectId  string                 `protobuf:"bytes,1,opt,name=userObjectId,proto3" json:"userObjectId,omitempty"`
	WorkspaceId   string                 `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserWorkspaceAssignmentRequest) Reset() {
	*x = GetUserWorkspaceAssignmentRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserWorkspaceAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWorkspaceAssignmentRequest) ProtoMessage() {}

func (x *GetUserWorkspaceAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWorkspaceAssignmentRequest.ProtoReflect.Descriptor instead.
func (*GetUserWorkspaceAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserWorkspaceAssignmentRequest) GetUserObjectId() string {
	if x != nil {
		return x.UserObjectId
	}
	return ""
}

func (x *GetUserWorkspaceAssignmentRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetUserWorkspaceAssignmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          WorkspaceRole          `protobuf:"varint,1,opt,name=role,proto3,enum=api.WorkspaceRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserWorkspaceAssignmentResponse) Reset() {
	*x = GetUserWorkspaceAssignmentResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserWorkspaceAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWorkspaceAssignmentResponse) ProtoMessage() {}

func (x *GetUserWorkspaceAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWorkspaceAssignmentResponse.ProtoReflect.Descriptor instead.
func (*GetUserWorkspaceAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserWorkspaceAssignmentResponse) GetRole() WorkspaceRole {
	if x != nil {
		return x.Role
	}
	return WorkspaceRole_UNASSIGNED
}

type AssignUserToWorkspaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserObjectId  string                 `protobuf:"bytes,1,opt,name=userObjectId,proto3" json:"userObjectId,omitempty"`
	WorkspaceId   string                 `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Role          WorkspaceRole          `protobuf:"varint,3,opt,name=role,proto3,enum=api.WorkspaceRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignUserToWorkspaceRequest) Reset() {
	*x = AssignUserToWorkspaceRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignUserToWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignUserToWorkspaceRequest) ProtoMessage() {}

func (x *AssignUserToWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignUserToWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*AssignUserToWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{10}
}

func (x *AssignUserToWorkspaceRequest) GetUserObjectId() string {
	if x != nil {
		return x.UserObjectId
	}
	return ""
}

func (x *AssignUserToWorkspaceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *AssignUserToWorkspaceRequest) GetRole() WorkspaceRole {
	if x != nil {
		return x.Role
	}
	return WorkspaceRole_UNASSIGNED
}

type AssignUserToWorkspaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignUserToWorkspaceResponse) Reset() {
	*x = AssignUserToWorkspaceResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignUserToWorkspaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignUserToWorkspaceResponse) ProtoMessage() {}

func (x *AssignUserToWorkspaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignUserToWorkspaceResponse.ProtoReflect.Descriptor instead.
func (*AssignUserToWorkspaceResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{11}
}

type GetRegistryTokenPasswordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegistryTokenPasswordsRequest) Reset() {
	*x = GetRegistryTokenPasswordsRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegistryTokenPasswordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistryTokenPasswordsRequest) ProtoMessage() {}

func (x *GetRegistryTokenPasswordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistryTokenPasswordsRequest.ProtoReflect.Descriptor instead.
func (*GetRegistryTokenPasswordsRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{12}
}

func (x *GetRegistryTokenPasswordsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetRegistryTokenPasswordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password1     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=password1,proto3,oneof" json:"password1,omitempty"`
	Password2     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=password2,proto3,oneof" json:"password2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegistryTokenPasswordsResponse) Reset() {
	*x = GetRegistryTokenPasswordsResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegistryTokenPasswordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistryTokenPasswordsResponse) ProtoMessage() {}

func (x *GetRegistryTokenPasswordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistryTokenPasswordsResponse.ProtoReflect.Descriptor instead.
func (*GetRegistryTokenPasswordsResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{13}
}

func (x *GetRegistryTokenPasswordsResponse) GetPassword1() *timestamppb.Timestamp {
	if x != nil {
		return x.Password1
	}
	return nil
}

func (x *GetRegistryTokenPasswordsResponse) GetPassword2() *timestamppb.Timestamp {
	if x != nil {
		return x.Password2
	}
	return nil
}

type CreateRegistryTokenPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Password2     bool                   `protobuf:"varint,2,opt,name=password2,proto3" json:"password2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegistryTokenPasswordRequest) Reset() {
	*x = CreateRegistryTokenPasswordRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegistryTokenPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegistryTokenPasswordRequest) ProtoMessage() {}

func (x *CreateRegistryTokenPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegistryTokenPasswordRequest.ProtoReflect.Descriptor instead.
func (*CreateRegistryTokenPasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRegistryTokenPasswordRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateRegistryTokenPasswordRequest) GetPassword2() bool {
	if x != nil {
		return x.Password2
	}
	return false
}

type CreateRegistryTokenPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password      string                 `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegistryTokenPasswordResponse) Reset() {
	*x = CreateRegistryTokenPasswordResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegistryTokenPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegistryTokenPasswordResponse) ProtoMessage() {}

func (x *CreateRegistryTokenPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegistryTokenPasswordResponse.ProtoReflect.Descriptor instead.
func (*CreateRegistryTokenPasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRegistryTokenPasswordResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateRegistryTokenPasswordResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImagesRequest) Reset() {
	*x = GetImagesRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImagesRequest) ProtoMessage() {}

func (x *GetImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImagesRequest.ProtoReflect.Descriptor instead.
func (*GetImagesRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{16}
}

func (x *GetImagesRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImagesResponse) Reset() {
	*x = GetImagesResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImagesResponse) ProtoMessage() {}

func (x *GetImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImagesResponse.ProtoReflect.Descriptor instead.
func (*GetImagesResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{17}
}

func (x *GetImagesResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateSpecificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode          DataMode               `protobuf:"varint,3,opt,name=mode,proto3,enum=api.DataMode" json:"mode,omitempty"`
	Tables        []*TableSchema         `protobuf:"bytes,4,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpecificationRequest) Reset() {
	*x = CreateSpecificationRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecificationRequest) ProtoMessage() {}

func (x *CreateSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecificationRequest.ProtoReflect.Descriptor instead.
func (*CreateSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{18}
}

func (x *CreateSpecificationRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateSpecificationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSpecificationRequest) GetMode() DataMode {
	if x != nil {
		return x.Mode
	}
	return DataMode_INPUT
}

func (x *CreateSpecificationRequest) GetTables() []*TableSchema {
	if x != nil {
		return x.Tables
	}
	return nil
}

type CreateSpecificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpecificationResponse) Reset() {
	*x = CreateSpecificationResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecificationResponse) ProtoMessage() {}

func (x *CreateSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecificationResponse.ProtoReflect.Descriptor instead.
func (*CreateSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{19}
}

func (x *CreateSpecificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSpecificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Mode          *DataMode              `protobuf:"varint,2,opt,name=mode,proto3,enum=api.DataMode,oneof" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecificationsRequest) Reset() {
	*x = GetSpecificationsRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificationsRequest) ProtoMessage() {}

func (x *GetSpecificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificationsRequest.ProtoReflect.Descriptor instead.
func (*GetSpecificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{20}
}

func (x *GetSpecificationsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *GetSpecificationsRequest) GetMode() DataMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return DataMode_INPUT
}

type GetSpecificationsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Specifications []*SpecificationName   `protobuf:"bytes,1,rep,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSpecificationsResponse) Reset() {
	*x = GetSpecificationsResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificationsResponse) ProtoMessage() {}

func (x *GetSpecificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificationsResponse.ProtoReflect.Descriptor instead.
func (*GetSpecificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{21}
}

func (x *GetSpecificationsResponse) GetSpecifications() []*SpecificationName {
	if x != nil {
		return x.Specifications
	}
	return nil
}

type GetSpecificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecificationRequest) Reset() {
	*x = GetSpecificationRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificationRequest) ProtoMessage() {}

func (x *GetSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificationRequest.ProtoReflect.Descriptor instead.
func (*GetSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{22}
}

func (x *GetSpecificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSpecificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Specification *Specification         `protobuf:"bytes,1,opt,name=specification,proto3" json:"specification,omitempty"`
	Mode          DataMode               `protobuf:"varint,2,opt,name=mode,proto3,enum=api.DataMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecificationResponse) Reset() {
	*x = GetSpecificationResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificationResponse) ProtoMessage() {}

func (x *GetSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificationResponse.ProtoReflect.Descriptor instead.
func (*GetSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{23}
}

func (x *GetSpecificationResponse) GetSpecification() *Specification {
	if x != nil {
		return x.Specification
	}
	return nil
}

func (x *GetSpecificationResponse) GetMode() DataMode {
	if x != nil {
		return x.Mode
	}
	return DataMode_INPUT
}

type CreateLandingZoneSharedAccessSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	FileName      string                 `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLandingZoneSharedAccessSignatureRequest) Reset() {
	*x = CreateLandingZoneSharedAccessSignatureRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLandingZoneSharedAccessSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLandingZoneSharedAccessSignatureRequest) ProtoMessage() {}

func (x *CreateLandingZoneSharedAccessSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLandingZoneSharedAccessSignatureRequest.ProtoReflect.Descriptor instead.
func (*CreateLandingZoneSharedAccessSignatureRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{24}
}

func (x *CreateLandingZoneSharedAccessSignatureRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateLandingZoneSharedAccessSignatureRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type CreateLandingZoneSharedAccessSignatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLandingZoneSharedAccessSignatureResponse) Reset() {
	*x = CreateLandingZoneSharedAccessSignatureResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLandingZoneSharedAccessSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLandingZoneSharedAccessSignatureResponse) ProtoMessage() {}

func (x *CreateLandingZoneSharedAccessSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLandingZoneSharedAccessSignatureResponse.ProtoReflect.Descriptor instead.
func (*CreateLandingZoneSharedAccessSignatureResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{25}
}

func (x *CreateLandingZoneSharedAccessSignatureResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetLandingZoneFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Prefix        string                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Marker        *string                `protobuf:"bytes,3,opt,name=marker,proto3,oneof" json:"marker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLandingZoneFilesRequest) Reset() {
	*x = GetLandingZoneFilesRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLandingZoneFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandingZoneFilesRequest) ProtoMessage() {}

func (x *GetLandingZoneFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandingZoneFilesRequest.ProtoReflect.Descriptor instead.
func (*GetLandingZoneFilesRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{26}
}

func (x *GetLandingZoneFilesRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *GetLandingZoneFilesRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *GetLandingZoneFilesRequest) GetMarker() string {
	if x != nil && x.Marker != nil {
		return *x.Marker
	}
	return ""
}

type GetLandingZoneFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*LandingZoneFile     `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	NextMarker    *string                `protobuf:"bytes,2,opt,name=nextMarker,proto3,oneof" json:"nextMarker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLandingZoneFilesResponse) Reset() {
	*x = GetLandingZoneFilesResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLandingZoneFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandingZoneFilesResponse) ProtoMessage() {}

func (x *GetLandingZoneFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandingZoneFilesResponse.ProtoReflect.Descriptor instead.
func (*GetLandingZoneFilesResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{27}
}

func (x *GetLandingZoneFilesResponse) GetFiles() []*LandingZoneFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetLandingZoneFilesResponse) GetNextMarker() string {
	if x != nil && x.NextMarker != nil {
		return *x.NextMarker
	}
	return ""
}

type CreateFileGroupRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SpecificationId    string                 `protobuf:"bytes,1,opt,name=specificationId,proto3" json:"specificationId,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SchemaFileMappings []*SchemaFileMapping   `protobuf:"bytes,3,rep,name=schemaFileMappings,proto3" json:"schemaFileMappings,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateFileGroupRequest) Reset() {
	*x = CreateFileGroupRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileGroupRequest) ProtoMessage() {}

func (x *CreateFileGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateFileGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{28}
}

func (x *CreateFileGroupRequest) GetSpecificationId() string {
	if x != nil {
		return x.SpecificationId
	}
	return ""
}

func (x *CreateFileGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFileGroupRequest) GetSchemaFileMappings() []*SchemaFileMapping {
	if x != nil {
		return x.SchemaFileMappings
	}
	return nil
}

type CreateFileGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileGroupResponse) Reset() {
	*x = CreateFileGroupResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileGroupResponse) ProtoMessage() {}

func (x *CreateFileGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateFileGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{29}
}

func (x *CreateFileGroupResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFileGroupsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileGroupsRequest) Reset() {
	*x = GetFileGroupsRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileGroupsRequest) ProtoMessage() {}

func (x *GetFileGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetFileGroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{30}
}

func (x *GetFileGroupsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetFileGroupsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileGroups    []*FileGroupName       `protobuf:"bytes,1,rep,name=fileGroups,proto3" json:"fileGroups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileGroupsResponse) Reset() {
	*x = GetFileGroupsResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileGroupsResponse) ProtoMessage() {}

func (x *GetFileGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetFileGroupsResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{31}
}

func (x *GetFileGroupsResponse) GetFileGroups() []*FileGroupName {
	if x != nil {
		return x.FileGroups
	}
	return nil
}

type CreateModelRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	InputSpecificationId  string                 `protobuf:"bytes,1,opt,name=inputSpecificationId,proto3" json:"inputSpecificationId,omitempty"`
	OutputSpecificationId string                 `protobuf:"bytes,2,opt,name=outputSpecificationId,proto3" json:"outputSpecificationId,omitempty"`
	Name                  string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ParametersSchema      *string                `protobuf:"bytes,4,opt,name=parametersSchema,proto3,oneof" json:"parametersSchema,omitempty"`
	ImageName             string                 `protobuf:"bytes,5,opt,name=imageName,proto3" json:"imageName,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateModelRequest) Reset() {
	*x = CreateModelRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelRequest) ProtoMessage() {}

func (x *CreateModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelRequest.ProtoReflect.Descriptor instead.
func (*CreateModelRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{32}
}

func (x *CreateModelRequest) GetInputSpecificationId() string {
	if x != nil {
		return x.InputSpecificationId
	}
	return ""
}

func (x *CreateModelRequest) GetOutputSpecificationId() string {
	if x != nil {
		return x.OutputSpecificationId
	}
	return ""
}

func (x *CreateModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateModelRequest) GetParametersSchema() string {
	if x != nil && x.ParametersSchema != nil {
		return *x.ParametersSchema
	}
	return ""
}

func (x *CreateModelRequest) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

type CreateModelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateModelResponse) Reset() {
	*x = CreateModelResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelResponse) ProtoMessage() {}

func (x *CreateModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelResponse.ProtoReflect.Descriptor instead.
func (*CreateModelResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{33}
}

func (x *CreateModelResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetModelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelsRequest) Reset() {
	*x = GetModelsRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelsRequest) ProtoMessage() {}

func (x *GetModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelsRequest.ProtoReflect.Descriptor instead.
func (*GetModelsRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{34}
}

func (x *GetModelsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetModelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Models        []*ModelName           `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelsResponse) Reset() {
	*x = GetModelsResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelsResponse) ProtoMessage() {}

func (x *GetModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelsResponse.ProtoReflect.Descriptor instead.
func (*GetModelsResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{35}
}

func (x *GetModelsResponse) GetModels() []*ModelName {
	if x != nil {
		return x.Models
	}
	return nil
}

type GetModelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelRequest) Reset() {
	*x = GetModelRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelRequest) ProtoMessage() {}

func (x *GetModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelRequest.ProtoReflect.Descriptor instead.
func (*GetModelRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{36}
}

func (x *GetModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetModelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         *Model                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelResponse) Reset() {
	*x = GetModelResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelResponse) ProtoMessage() {}

func (x *GetModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelResponse.ProtoReflect.Descriptor instead.
func (*GetModelResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{37}
}

func (x *GetModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

type CreateModelRunRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ModelId          string                 `protobuf:"bytes,1,opt,name=modelId,proto3" json:"modelId,omitempty"`
	InputFileGroupId string                 `protobuf:"bytes,2,opt,name=inputFileGroupId,proto3" json:"inputFileGroupId,omitempty"`
	Parameters       *string                `protobuf:"bytes,3,opt,name=parameters,proto3,oneof" json:"parameters,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateModelRunRequest) Reset() {
	*x = CreateModelRunRequest{}
	mi := &file_api_tenantManagement_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelRunRequest) ProtoMessage() {}

func (x *CreateModelRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelRunRequest.ProtoReflect.Descriptor instead.
func (*CreateModelRunRequest) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{38}
}

func (x *CreateModelRunRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *CreateModelRunRequest) GetInputFileGroupId() string {
	if x != nil {
		return x.InputFileGroupId
	}
	return ""
}

func (x *CreateModelRunRequest) GetParameters() string {
	if x != nil && x.Parameters != nil {
		return *x.Parameters
	}
	return ""
}

func (x *CreateModelRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateModelRunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateModelRunResponse) Reset() {
	*x = CreateModelRunResponse{}
	mi := &file_api_tenantManagement_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelRunResponse) ProtoMessage() {}

func (x *CreateModelRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelRunResponse.ProtoReflect.Descriptor instead.
func (*CreateModelRunResponse) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{39}
}

func (x *CreateModelRunResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Model struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InputSpecificationId  string                 `protobuf:"bytes,3,opt,name=inputSpecificationId,proto3" json:"inputSpecificationId,omitempty"`
	OutputSpecificationId string                 `protobuf:"bytes,4,opt,name=outputSpecificationId,proto3" json:"outputSpecificationId,omitempty"`
	ParametersSchema      *string                `protobuf:"bytes,5,opt,name=parametersSchema,proto3,oneof" json:"parametersSchema,omitempty"`
	ImageName             string                 `protobuf:"bytes,6,opt,name=imageName,proto3" json:"imageName,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Model) Reset() {
	*x = Model{}
	mi := &file_api_tenantManagement_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{40}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetInputSpecificationId() string {
	if x != nil {
		return x.InputSpecificationId
	}
	return ""
}

func (x *Model) GetOutputSpecificationId() string {
	if x != nil {
		return x.OutputSpecificationId
	}
	return ""
}

func (x *Model) GetParametersSchema() string {
	if x != nil && x.ParametersSchema != nil {
		return *x.ParametersSchema
	}
	return ""
}

func (x *Model) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

type ModelName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModelName) Reset() {
	*x = ModelName{}
	mi := &file_api_tenantManagement_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelName) ProtoMessage() {}

func (x *ModelName) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelName.ProtoReflect.Descriptor instead.
func (*ModelName) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{41}
}

func (x *ModelName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModelName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FileGroupName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileGroupName) Reset() {
	*x = FileGroupName{}
	mi := &file_api_tenantManagement_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileGroupName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGroupName) ProtoMessage() {}

func (x *FileGroupName) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGroupName.ProtoReflect.Descriptor instead.
func (*FileGroupName) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{42}
}

func (x *FileGroupName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileGroupName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SchemaFileMapping struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SchemaName          string                 `protobuf:"bytes,1,opt,name=schemaName,proto3" json:"schemaName,omitempty"`
	LandingZoneFileName string                 `protobuf:"bytes,2,opt,name=landingZoneFileName,proto3" json:"landingZoneFileName,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SchemaFileMapping) Reset() {
	*x = SchemaFileMapping{}
	mi := &file_api_tenantManagement_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaFileMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaFileMapping) ProtoMessage() {}

func (x *SchemaFileMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaFileMapping.ProtoReflect.Descriptor instead.
func (*SchemaFileMapping) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{43}
}

func (x *SchemaFileMapping) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *SchemaFileMapping) GetLandingZoneFileName() string {
	if x != nil {
		return x.LandingZoneFileName
	}
	return ""
}

type LandingZoneFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LandingZoneFile) Reset() {
	*x = LandingZoneFile{}
	mi := &file_api_tenantManagement_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LandingZoneFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandingZoneFile) ProtoMessage() {}

func (x *LandingZoneFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandingZoneFile.ProtoReflect.Descriptor instead.
func (*LandingZoneFile) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{44}
}

func (x *LandingZoneFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LandingZoneFile) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LandingZoneFile) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

type SpecificationName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode          DataMode               `protobuf:"varint,3,opt,name=mode,proto3,enum=api.DataMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecificationName) Reset() {
	*x = SpecificationName{}
	mi := &file_api_tenantManagement_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecificationName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecificationName) ProtoMessage() {}

func (x *SpecificationName) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecificationName.ProtoReflect.Descriptor instead.
func (*SpecificationName) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{45}
}

func (x *SpecificationName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpecificationName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecificationName) GetMode() DataMode {
	if x != nil {
		return x.Mode
	}
	return DataMode_INPUT
}

type Specification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tables        []*TableSchema         `protobuf:"bytes,3,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Specification) Reset() {
	*x = Specification{}
	mi := &file_api_tenantManagement_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Specification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Specification) ProtoMessage() {}

func (x *Specification) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Specification.ProtoReflect.Descriptor instead.
func (*Specification) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{46}
}

func (x *Specification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Specification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Specification) GetTables() []*TableSchema {
	if x != nil {
		return x.Tables
	}
	return nil
}

type TableSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fields        []*TableField          `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableSchema) Reset() {
	*x = TableSchema{}
	mi := &file_api_tenantManagement_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchema) ProtoMessage() {}

func (x *TableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchema.ProtoReflect.Descriptor instead.
func (*TableSchema) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{47}
}

func (x *TableSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableSchema) GetFields() []*TableField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type TableField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          TableFieldType         `protobuf:"varint,2,opt,name=type,proto3,enum=api.TableFieldType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableField) Reset() {
	*x = TableField{}
	mi := &file_api_tenantManagement_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableField) ProtoMessage() {}

func (x *TableField) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableField.ProtoReflect.Descriptor instead.
func (*TableField) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{48}
}

func (x *TableField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableField) GetType() TableFieldType {
	if x != nil {
		return x.Type
	}
	return TableFieldType_BIGINT
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_api_tenantManagement_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{49}
}

func (x *Image) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Workspace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	mi := &file_api_tenantManagement_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{50}
}

func (x *Workspace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workspace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName   string                 `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_tenantManagement_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_tenantManagement_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_tenantManagement_proto_rawDescGZIP(), []int{51}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

var File_api_tenantManagement_proto protoreflect.FileDescriptor

var file_api_tenantManagement_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x14,
	0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x64, 0x69, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x44, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x31, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x31, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x22, 0x64, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x22, 0x7b,
	0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x2d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x7e,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x7d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x9e, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x29,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0xf6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa5, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf9,
	0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x15, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x2f, 0x0a, 0x09, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x46,
	0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x65, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x22, 0x5a, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x5d,
	0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x4a, 0x0a,
	0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x0a, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0xb1,
	0x02, 0x0a, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x49, 0x47, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x49, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c,
	0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x48, 0x55, 0x47, 0x45, 0x49, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x56, 0x41, 0x4c, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x0a,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x54, 0x10, 0x0b, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x54, 0x5a, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d,
	0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x0e, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4e, 0x59,
	0x49, 0x4e, 0x54, 0x10, 0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x42, 0x49, 0x47, 0x49, 0x4e, 0x54,
	0x10, 0x10, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x48, 0x55, 0x47, 0x45, 0x49, 0x4e, 0x54, 0x10, 0x11,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x12, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x54, 0x10, 0x13, 0x12, 0x0c, 0x0a,
	0x08, 0x55, 0x54, 0x49, 0x4e, 0x59, 0x49, 0x4e, 0x54, 0x10, 0x14, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x41, 0x52, 0x43, 0x48, 0x41, 0x52,
	0x10, 0x16, 0x2a, 0x44, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x56,
	0x45, 0x4c, 0x4f, 0x50, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x21, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x01, 0x32, 0x9e, 0x0d, 0x0a, 0x17,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x0d, 0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x15, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x75, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x6f, 0x72, 0x68, 0x61,
	0x66, 0x41, 0x6c, 0x73, 0x68, 0x69, 0x62, 0x6c, 0x79, 0x2f, 0x69, 0x75, 0x6e, 0x76, 0x69, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_tenantManagement_proto_rawDescOnce sync.Once
	file_api_tenantManagement_proto_rawDescData []byte
)

func file_api_tenantManagement_proto_rawDescGZIP() []byte {
	file_api_tenantManagement_proto_rawDescOnce.Do(func() {
		file_api_tenantManagement_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_tenantManagement_proto_rawDesc), len(file_api_tenantManagement_proto_rawDesc)))
	})
	return file_api_tenantManagement_proto_rawDescData
}

var file_api_tenantManagement_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_tenantManagement_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_api_tenantManagement_proto_goTypes = []any{
	(TableFieldType)(0),                                    // 0: api.TableFieldType
	(WorkspaceRole)(0),                                     // 1: api.WorkspaceRole
	(DataMode)(0),                                          // 2: api.DataMode
	(*CreateWorkspaceRequest)(nil),                         // 3: api.CreateWorkspaceRequest
	(*CreateWorkspaceResponse)(nil),                        // 4: api.CreateWorkspaceResponse
	(*GetWorkspacesRequest)(nil),                           // 5: api.GetWorkspacesRequest
	(*GetWorkspacesResponse)(nil),                          // 6: api.GetWorkspacesResponse
	(*EditWorkspaceRequest)(nil),                           // 7: api.EditWorkspaceRequest
	(*EditWorkspaceResponse)(nil),                          // 8: api.EditWorkspaceResponse
	(*GetUsersRequest)(nil),                                // 9: api.GetUsersRequest
	(*GetUsersResponse)(nil),                               // 10: api.GetUsersResponse
	(*GetUserWorkspaceAssignmentRequest)(nil),              // 11: api.GetUserWorkspaceAssignmentRequest
	(*GetUserWorkspaceAssignmentResponse)(nil),             // 12: api.GetUserWorkspaceAssignmentResponse
	(*AssignUserToWorkspaceRequest)(nil),                   // 13: api.AssignUserToWorkspaceRequest
	(*AssignUserToWorkspaceResponse)(nil),                  // 14: api.AssignUserToWorkspaceResponse
	(*GetRegistryTokenPasswordsRequest)(nil),               // 15: api.GetRegistryTokenPasswordsRequest
	(*GetRegistryTokenPasswordsResponse)(nil),              // 16: api.GetRegistryTokenPasswordsResponse
	(*CreateRegistryTokenPasswordRequest)(nil),             // 17: api.CreateRegistryTokenPasswordRequest
	(*CreateRegistryTokenPasswordResponse)(nil),            // 18: api.CreateRegistryTokenPasswordResponse
	(*GetImagesRequest)(nil),                               // 19: api.GetImagesRequest
	(*GetImagesResponse)(nil),                              // 20: api.GetImagesResponse
	(*CreateSpecificationRequest)(nil),                     // 21: api.CreateSpecificationRequest
	(*CreateSpecificationResponse)(nil),                    // 22: api.CreateSpecificationResponse
	(*GetSpecificationsRequest)(nil),                       // 23: api.GetSpecificationsRequest
	(*GetSpecificationsResponse)(nil),                      // 24: api.GetSpecificationsResponse
	(*GetSpecificationRequest)(nil),                        // 25: api.GetSpecificationRequest
	(*GetSpecificationResponse)(nil),                       // 26: api.GetSpecificationResponse
	(*CreateLandingZoneSharedAccessSignatureRequest)(nil),  // 27: api.CreateLandingZoneSharedAccessSignatureRequest
	(*CreateLandingZoneSharedAccessSignatureResponse)(nil), // 28: api.CreateLandingZoneSharedAccessSignatureResponse
	(*GetLandingZoneFilesRequest)(nil),                     // 29: api.GetLandingZoneFilesRequest
	(*GetLandingZoneFilesResponse)(nil),                    // 30: api.GetLandingZoneFilesResponse
	(*CreateFileGroupRequest)(nil),                         // 31: api.CreateFileGroupRequest
	(*CreateFileGroupResponse)(nil),                        // 32: api.CreateFileGroupResponse
	(*GetFileGroupsRequest)(nil),                           // 33: api.GetFileGroupsRequest
	(*GetFileGroupsResponse)(nil),                          // 34: api.GetFileGroupsResponse
	(*CreateModelRequest)(nil),                             // 35: api.CreateModelRequest
	(*CreateModelResponse)(nil),                            // 36: api.CreateModelResponse
	(*GetModelsRequest)(nil),                               // 37: api.GetModelsRequest
	(*GetModelsResponse)(nil),                              // 38: api.GetModelsResponse
	(*GetModelRequest)(nil),                                // 39: api.GetModelRequest
	(*GetModelResponse)(nil),                               // 40: api.GetModelResponse
	(*CreateModelRunRequest)(nil),                          // 41: api.CreateModelRunRequest
	(*CreateModelRunResponse)(nil),                         // 42: api.CreateModelRunResponse
	(*Model)(nil),                                          // 43: api.Model
	(*ModelName)(nil),                                      // 44: api.ModelName
	(*FileGroupName)(nil),                                  // 45: api.FileGroupName
	(*SchemaFileMapping)(nil),                              // 46: api.SchemaFileMapping
	(*LandingZoneFile)(nil),                                // 47: api.LandingZoneFile
	(*SpecificationName)(nil),                              // 48: api.SpecificationName
	(*Specification)(nil),                                  // 49: api.Specification
	(*TableSchema)(nil),                                    // 50: api.TableSchema
	(*TableField)(nil),                                     // 51: api.TableField
	(*Image)(nil),                                          // 52: api.Image
	(*Workspace)(nil),                                      // 53: api.Workspace
	(*User)(nil),                                           // 54: api.User
	(*timestamppb.Timestamp)(nil),                          // 55: google.protobuf.Timestamp
}
var file_api_tenantManagement_proto_depIdxs = []int32{
	53, // 0: api.GetWorkspacesResponse.workspaces:type_name -> api.Workspace
	54, // 1: api.GetUsersResponse.users:type_name -> api.User
	1,  // 2: api.GetUserWorkspaceAssignmentResponse.role:type_name -> api.WorkspaceRole
	1,  // 3: api.AssignUserToWorkspaceRequest.role:type_name -> api.WorkspaceRole
	55, // 4: api.GetRegistryTokenPasswordsResponse.password1:type_name -> google.protobuf.Timestamp
	55, // 5: api.GetRegistryTokenPasswordsResponse.password2:type_name -> google.protobuf.Timestamp
	55, // 6: api.CreateRegistryTokenPasswordResponse.createdAt:type_name -> google.protobuf.Timestamp
	52, // 7: api.GetImagesResponse.images:type_name -> api.Image
	2,  // 8: api.CreateSpecificationRequest.mode:type_name -> api.DataMode
	50, // 9: api.CreateSpecificationRequest.tables:type_name -> api.TableSchema
	2,  // 10: api.GetSpecificationsRequest.mode:type_name -> api.DataMode
	48, // 11: api.GetSpecificationsResponse.specifications:type_name -> api.SpecificationName
	49, // 12: api.GetSpecificationResponse.specification:type_name -> api.Specification
	2,  // 13: api.GetSpecificationResponse.mode:type_name -> api.DataMode
	47, // 14: api.GetLandingZoneFilesResponse.files:type_name -> api.LandingZoneFile
	46, // 15: api.CreateFileGroupRequest.schemaFileMappings:type_name -> api.SchemaFileMapping
	45, // 16: api.GetFileGroupsResponse.fileGroups:type_name -> api.FileGroupName
	44, // 17: api.GetModelsResponse.models:type_name -> api.ModelName
	43, // 18: api.GetModelResponse.model:type_name -> api.Model
	55, // 19: api.LandingZoneFile.lastModified:type_name -> google.protobuf.Timestamp
	2,  // 20: api.SpecificationName.mode:type_name -> api.DataMode
	50, // 21: api.Specification.tables:type_name -> api.TableSchema
	51, // 22: api.TableSchema.fields:type_name -> api.TableField
	0,  // 23: api.TableField.type:type_name -> api.TableFieldType
	3,  // 24: api.TenantManagementService.CreateWorkspace:input_type -> api.CreateWorkspaceRequest
	5,  // 25: api.TenantManagementService.GetWorkspaces:input_type -> api.GetWorkspacesRequest
	7,  // 26: api.TenantManagementService.EditWorkspace:input_type -> api.EditWorkspaceRequest
	9,  // 27: api.TenantManagementService.GetUsers:input_type -> api.GetUsersRequest
	11, // 28: api.TenantManagementService.GetUserWorkspaceAssignment:input_type -> api.GetUserWorkspaceAssignmentRequest
	13, // 29: api.TenantManagementService.AssignUserToWorkspace:input_type -> api.AssignUserToWorkspaceRequest
	15, // 30: api.TenantManagementService.GetRegistryTokenPasswords:input_type -> api.GetRegistryTokenPasswordsRequest
	17, // 31: api.TenantManagementService.CreateRegistryTokenPassword:input_type -> api.CreateRegistryTokenPasswordRequest
	19, // 32: api.TenantManagementService.GetImages:input_type -> api.GetImagesRequest
	21, // 33: api.TenantManagementService.CreateSpecification:input_type -> api.CreateSpecificationRequest
	23, // 34: api.TenantManagementService.GetSpecifications:input_type -> api.GetSpecificationsRequest
	25, // 35: api.TenantManagementService.GetSpecification:input_type -> api.GetSpecificationRequest
	27, // 36: api.TenantManagementService.CreateLandingZoneSharedAccessSignature:input_type -> api.CreateLandingZoneSharedAccessSignatureRequest
	29, // 37: api.TenantManagementService.GetLandingZoneFiles:input_type -> api.GetLandingZoneFilesRequest
	31, // 38: api.TenantManagementService.CreateFileGroup:input_type -> api.CreateFileGroupRequest
	33, // 39: api.TenantManagementService.GetFileGroups:input_type -> api.GetFileGroupsRequest
	35, // 40: api.TenantManagementService.CreateModel:input_type -> api.CreateModelRequest
	37, // 41: api.TenantManagementService.GetModels:input_type -> api.GetModelsRequest
	39, // 42: api.TenantManagementService.GetModel:input_type -> api.GetModelRequest
	41, // 43: api.TenantManagementService.CreateModelRun:input_type -> api.CreateModelRunRequest
	4,  // 44: api.TenantManagementService.CreateWorkspace:output_type -> api.CreateWorkspaceResponse
	6,  // 45: api.TenantManagementService.GetWorkspaces:output_type -> api.GetWorkspacesResponse
	8,  // 46: api.TenantManagementService.EditWorkspace:output_type -> api.EditWorkspaceResponse
	10, // 47: api.TenantManagementService.GetUsers:output_type -> api.GetUsersResponse
	12, // 48: api.TenantManagementService.GetUserWorkspaceAssignment:output_type -> api.GetUserWorkspaceAssignmentResponse
	14, // 49: api.TenantManagementService.AssignUserToWorkspace:output_type -> api.AssignUserToWorkspaceResponse
	16, // 50: api.TenantManagementService.GetRegistryTokenPasswords:output_type -> api.GetRegistryTokenPasswordsResponse
	18, // 51: api.TenantManagementService.CreateRegistryTokenPassword:output_type -> api.CreateRegistryTokenPasswordResponse
	20, // 52: api.TenantManagementService.GetImages:output_type -> api.GetImagesResponse
	22, // 53: api.TenantManagementService.CreateSpecification:output_type -> api.CreateSpecificationResponse
	24, // 54: api.TenantManagementService.GetSpecifications:output_type -> api.GetSpecificationsResponse
	26, // 55: api.TenantManagementService.GetSpecification:output_type -> api.GetSpecificationResponse
	28, // 56: api.TenantManagementService.CreateLandingZoneSharedAccessSignature:output_type -> api.CreateLandingZoneSharedAccessSignatureResponse
	30, // 57: api.TenantManagementService.GetLandingZoneFiles:output_type -> api.GetLandingZoneFilesResponse
	32, // 58: api.TenantManagementService.CreateFileGroup:output_type -> api.CreateFileGroupResponse
	34, // 59: api.TenantManagementService.GetFileGroups:output_type -> api.GetFileGroupsResponse
	36, // 60: api.TenantManagementService.CreateModel:output_type -> api.CreateModelResponse
	38, // 61: api.TenantManagementService.GetModels:output_type -> api.GetModelsResponse
	40, // 62: api.TenantManagementService.GetModel:output_type -> api.GetModelResponse
	42, // 63: api.TenantManagementService.CreateModelRun:output_type -> api.CreateModelRunResponse
	44, // [44:64] is the sub-list for method output_type
	24, // [24:44] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_api_tenantManagement_proto_init() }
func file_api_tenantManagement_proto_init() {
	if File_api_tenantManagement_proto != nil {
		return
	}
	file_api_tenantManagement_proto_msgTypes[13].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[20].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[26].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[27].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[32].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[38].OneofWrappers = []any{}
	file_api_tenantManagement_proto_msgTypes[40].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_tenantManagement_proto_rawDesc), len(file_api_tenantManagement_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tenantManagement_proto_goTypes,
		DependencyIndexes: file_api_tenantManagement_proto_depIdxs,
		EnumInfos:         file_api_tenantManagement_proto_enumTypes,
		MessageInfos:      file_api_tenantManagement_proto_msgTypes,
	}.Build()
	File_api_tenantManagement_proto = out.File
	file_api_tenantManagement_proto_goTypes = nil
	file_api_tenantManagement_proto_depIdxs = nil
}
