syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/MorhafAlshibly/iunvi/gen/api";

service TenantManagementService {
  rpc CreateWorkspace(CreateWorkspaceRequest) returns (CreateWorkspaceResponse);
  rpc GetWorkspaces(GetWorkspacesRequest) returns (GetWorkspacesResponse);
  rpc EditWorkspace(EditWorkspaceRequest) returns (EditWorkspaceResponse);
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc GetUserWorkspaceAssignment(GetUserWorkspaceAssignmentRequest) returns (GetUserWorkspaceAssignmentResponse);
  rpc AssignUserToWorkspace(AssignUserToWorkspaceRequest) returns (AssignUserToWorkspaceResponse);
  rpc GetRegistryTokenPasswords(GetRegistryTokenPasswordsRequest) returns (GetRegistryTokenPasswordsResponse);
  rpc CreateRegistryTokenPassword(CreateRegistryTokenPasswordRequest) returns (CreateRegistryTokenPasswordResponse);
  rpc GetImages(GetImagesRequest) returns (GetImagesResponse);
  rpc CreateSpecification(CreateSpecificationRequest) returns (CreateSpecificationResponse);
  rpc GetSpecifications(GetSpecificationsRequest) returns (GetSpecificationsResponse);
  rpc GetSpecification(GetSpecificationRequest) returns (GetSpecificationResponse);
  rpc CreateLandingZoneSharedAccessSignature(CreateLandingZoneSharedAccessSignatureRequest) returns (CreateLandingZoneSharedAccessSignatureResponse);
  rpc GetLandingZoneFiles(GetLandingZoneFilesRequest) returns (GetLandingZoneFilesResponse);
  rpc CreateFileGroup(CreateFileGroupRequest) returns (CreateFileGroupResponse);
  rpc GetFileGroups(GetFileGroupsRequest) returns (GetFileGroupsResponse);
  rpc CreateModel(CreateModelRequest) returns (CreateModelResponse);
  rpc GetModels(GetModelsRequest) returns (GetModelsResponse);
  rpc GetModel(GetModelRequest) returns (GetModelResponse);
  rpc CreateModelRun(CreateModelRunRequest) returns (CreateModelRunResponse);
  rpc GetModelRuns(GetModelRunsRequest) returns (GetModelRunsResponse);
  rpc CreateDashboard(CreateDashboardRequest) returns (CreateDashboardResponse);
  rpc GetDashboards(GetDashboardsRequest) returns (GetDashboardsResponse);
  rpc GetDashboard(GetDashboardRequest) returns (GetDashboardResponse);
  rpc GetModelRunDashboard(GetModelRunDashboardRequest) returns (GetModelRunDashboardResponse); 
}

message CreateWorkspaceRequest {
  string name = 1;
}

message CreateWorkspaceResponse {
  string id = 1;
}

message GetWorkspacesRequest {
}

message GetWorkspacesResponse {
  repeated Workspace workspaces = 1;
}

message EditWorkspaceRequest {
  string id = 1;
  string name = 2;
}

message EditWorkspaceResponse {
}

message GetUsersRequest {
}

message GetUsersResponse {
  repeated User users = 1;
}

message GetUserWorkspaceAssignmentRequest {
  string userObjectId = 1;
  string workspaceId = 2;
}

message GetUserWorkspaceAssignmentResponse {
  WorkspaceRole role = 1;
}

message AssignUserToWorkspaceRequest {
  string userObjectId = 1;
  string workspaceId = 2;
  WorkspaceRole role = 3;
}

message AssignUserToWorkspaceResponse {
}

message GetRegistryTokenPasswordsRequest {
  string workspaceId = 1;
}

message GetRegistryTokenPasswordsResponse {
  optional google.protobuf.Timestamp password1 = 1;
  optional google.protobuf.Timestamp password2 = 2;
}

message CreateRegistryTokenPasswordRequest {
  string workspaceId = 1;
  bool password2 = 2;
}

message CreateRegistryTokenPasswordResponse {
  string password = 1;
  google.protobuf.Timestamp createdAt = 2;
}

message GetImagesRequest {
  string workspaceId = 1;
}

message GetImagesResponse {
  repeated Image images = 1;
}

message CreateSpecificationRequest {
  string workspaceId = 1;
  string name = 2;
  DataMode mode = 3;
  repeated TableSchema tables = 4;
}

message CreateSpecificationResponse {
  string id = 1;
}

message GetSpecificationsRequest {
  string workspaceId = 1;
  optional DataMode mode = 2;
}

message GetSpecificationsResponse {
  repeated SpecificationName specifications = 1;
}

message GetSpecificationRequest {
  string id = 1;
}

message GetSpecificationResponse {
  Specification specification = 1;
  DataMode mode = 2;
}

message CreateLandingZoneSharedAccessSignatureRequest {
  string workspaceId = 1;
  string fileName = 2;
}

message CreateLandingZoneSharedAccessSignatureResponse {
  string url = 1;
}

message GetLandingZoneFilesRequest {
  string workspaceId = 1;
  string prefix = 2;
  optional string marker = 3;
}

message GetLandingZoneFilesResponse {
  repeated LandingZoneFile files = 1;
  optional string nextMarker = 2;
}

message CreateFileGroupRequest {
  string specificationId = 1;
  string name = 2;
  repeated SchemaFileMapping schemaFileMappings = 3;
}

message CreateFileGroupResponse {
  string id = 1;
}

message GetFileGroupsRequest {
  string workspaceId = 1;
  optional string specificationId = 2;
}

message GetFileGroupsResponse {
  repeated FileGroupName fileGroups = 1;
}

message CreateModelRequest {
  string inputSpecificationId = 1;
  string outputSpecificationId = 2;
  string name = 3;
  optional string parametersSchema = 4;
  string imageName = 5;
}

message CreateModelResponse {
  string id = 1;
}

message GetModelsRequest {
  string workspaceId = 1;
}

message GetModelsResponse {
  repeated ModelName models = 1;
}

message GetModelRequest {
  string id = 1;
}

message GetModelResponse {
  Model model = 1;
}

message CreateModelRunRequest {
  string modelId = 1;
  string inputFileGroupId = 2;
  optional string parameters = 3;
  string name = 4;
}

message CreateModelRunResponse {
  string id = 1;
}

message GetModelRunsRequest {
  string workspaceId = 1;
}

message GetModelRunsResponse {
  repeated ModelRun modelRuns = 1;
}

message CreateDashboardRequest {
  string modelId = 1;
  string name = 2;
  string definition = 3;
}

message CreateDashboardResponse {
  string id = 1;
}

message GetDashboardsRequest {
  string workspaceId = 1;
  optional string modelId = 2;
  optional string modelRunId = 3;
}

message GetDashboardsResponse {
  repeated Dashboard dashboards = 1;
}

message GetDashboardRequest {
  string id = 1;
}

message GetDashboardResponse {
  Dashboard dashboard = 1;
}

message GetModelRunDashboardRequest {
  string modelRunId = 1;
  string dashboardId = 2;
}

message GetModelRunDashboardResponse {
  string dashboardHtml = 1;
}

message ModelRun {
  string id = 1;
  string modelId = 2;
  string inputFileGroupId = 3;
  optional string outputFileGroupId = 4;
  string name = 5;
}

message Dashboard {
  string id = 1;
  string modelId = 2;
  string name = 3;
}

message Model {
  string id = 1;
  string name = 2;
  string inputSpecificationId = 3;
  string outputSpecificationId = 4;
  optional string parametersSchema = 5;
  string imageName = 6;
}

message ModelName {
  string id = 1;
  string name = 2;
}

message FileGroupName {
  string id = 1;
  string name = 2;
}

message SchemaFileMapping {
  string schemaName = 1;
  string landingZoneFileName = 2;
}

message LandingZoneFile {
  string name = 1;
  uint64 size = 2;
  google.protobuf.Timestamp lastModified = 3;
}

message SpecificationName {
  string id = 1;
  string name = 2;
  DataMode mode = 3;
}

message Specification {
  string id = 1;
  string name = 2;
  repeated TableSchema tables = 3;
}

message TableSchema {
  string name = 1;
  repeated TableField fields = 2;
}

message TableField {
  string name = 1;
  TableFieldType type = 2;
}

enum TableFieldType {
  BIGINT = 0;
  BIT = 1;
  BLOB = 2;
  BOOLEAN = 3;
  DATE = 4;
  DOUBLE = 5;
  FLOAT = 6;
  HUGEINT = 7;
  INTEGER = 8;
  INTERVAL = 9;
  JSON = 10;
  SMALLINT = 11;
  TIME = 12;
  TIMESTAMPTZ = 13;
  TIMESTAMP = 14;
  TINYINT = 15;
  UBIGINT = 16;
  UHUGEINT = 17;
  UINTEGER = 18;
  USMALLINT = 19;
  UTINYINT = 20;
  UUID = 21;
  VARCHAR = 22;
}

message Image {
  string scope = 1;
  string name = 2;
}

message Workspace {
  string id = 1;
  string name = 2;
}

message User {
  string id = 1;
  string username = 2;
  string displayName = 3;
}

enum WorkspaceRole {
  UNASSIGNED = 0;
  VIEWER = 1;
  USER = 2;
  DEVELOPER = 3;
}

enum DataMode {
  INPUT = 0;
  OUTPUT = 1;
}